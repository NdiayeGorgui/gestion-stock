name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ R√©cup√©rer le code source
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Installer JDK 17 pour compiler les microservices Spring Boot
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3Ô∏è‚É£ Compiler le projet parent et les microservices avec Maven
      - name: Build parent project and microservices with Maven
        run: |
          echo "üîπ Compilation du projet parent gestion-commerce"
          mvn -f gestion-commerce/pom.xml clean install -DskipTests
          
          SERVICES=("api-gateway-service" "base-domaine-service" "billing-service" "config-service" "customer-service" "eureka-registry-service" "inventory-service" "order-service" "payment-service")
          
          for SERVICE in "${SERVICES[@]}"; do
            echo "üîπ Compilation de $SERVICE"
            mvn -f gestion-commerce/$SERVICE/pom.xml clean install -DskipTests
          done

      # 4Ô∏è‚É£ Se connecter √† Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5Ô∏è‚É£ Builder et Pousser les images Docker sur Docker Hub
      - name: Build and Push Docker Images
        run: |
          DOCKER_HUB_USERNAME=gorgui
          
          for SERVICE in "${SERVICES[@]}"; do
            IMAGE_NAME="$DOCKER_HUB_USERNAME/$SERVICE:latest"
          
            echo "üîπ Build de l'image $IMAGE_NAME"
            docker build -t $IMAGE_NAME ./gestion-commerce/$SERVICE

            echo "üì§ Push de l'image $IMAGE_NAME"
            docker push $IMAGE_NAME
          done
